What is time complexity and what is its relation to algorithms?
A.  Time complexity is an estimation of the time it takes for an algorithm to run.

What is runtime?
A. Actual time it takes for an algorithm to run. 

How is the runtime of an algorithm calculated?
A. Add up how many instructions the algorithm will execute, written as a function or expression, simplify the expression to the largest
term and drop any constants.

Name the six types of algorithm growth rates we saw in this checkpoint and list them in order of most efficient to least efficient. 
Now Google another algorithmic growth rate not covered and place it in the correct spot in your list.
1. Constant
2. Logarithmic
3. Linear
4. Log-Linear
5. Quadratic
5.5 Cubic
6. Exponential

Choose one of the algorithmic growth rates from the last question and make a comparison to a real-life situation.
A. Compound interest would be an example of Exponential growth.

Determine the time complexity of the following snippet of code. It is commonly known as a linear search.
    FUNCTION linearSearch(array, target)
        FOR each number in the array
            IF number = target THEN
                RETURN true
            END IF
        END FOR
        RETURN false
    END FUNCTION

    A.  n+n+1
        2n+1
        time complexity of function linearSearch is n


Determine the time complexity of the following snippet of code.
    FUNCTION foo(array)
        FOR each number in the array
            FOR each number in the array
                print "Hello"
            END FOR
        END FOR
    END FUNCTION
    A. O(n^2)


Determine the time complexity of the following snippet of code. It is commonly known as the Fibonacci sequence.
    FUNCTION fibonacci(number)
        IF number < 1 THEN
            ERROR
        ELSE IF number = 1 or 2 THEN
            RETURN 1
        ELSE
            CALL fibonacci WITH number - 2 RETURNING twoBack
            CALL fibonacci WITH number - 1 RETURNING oneBack
            RETURN twoBack + oneBack
        END IF
    END FUNCTION
    A. O(2^n)

Out of the code snippets you just saw, which is the most time efficient?
A. The linear search, the first code snippet, is the most time efficient.